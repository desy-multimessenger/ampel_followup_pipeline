# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events
  push:
  pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ci:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Specify the python versions to test
    strategy:
      matrix:
        python-version: ["3.10"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Set up the python versions
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Install poetry
      - name: Install poetry and coveralls
        run: >-
          python -m pip install --upgrade poetry coveralls

     # Setting up dependencies
      - name: Install dependencies
        run: |
          poetry install -E cli

      # Runs all tests in the 'tests' directory and gets coverage
      - name: Test the code
        env:
          AMPEL_API_ARCHIVE_TOKEN_USER: ${{ secrets.ampel_api_archive_token_user }}
          AMPEL_API_ARCHIVE_TOKEN_PASSWORD: ${{ secrets.ampel_api_archive_token_password }}
          TNS_API_TOKEN: ${{ secrets.tns_api_token }}
          IRSA_USER: ${{ secrets.irsa_user }}
          IRSA_PASSWORD: ${{ secrets.irsa_password }}
          SKYVISION_USER: ${{ secrets.skyvision_user }}
          SKYVISION_PASSWORD: ${{ secrets.skyvision_password }}
          FRITZ_TOKEN: ${{ secrets.fritz_token }}
          DESY_CLOUD_TOKEN: ${{ secrets.desy_cloud_token }}
          DEPOT_USER: ${{ secrets.depot_user }}
          DEPOT_PASSWORD: ${{ secrets.depot_password }}
          ZTFDATA: ./
        run: |
          poetry run coverage run -m pytest -v

      # Push the coverage result to coveralls.io
      - name: Run Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        if: ${{ success() }}
        run: coveralls

      - name: Echo tag name
        run: echo "Tag is ${{ github.ref }}, Tagged is ${{ startsWith(github.ref, 'refs/tags/')}}, Python Check is ${{matrix.python-version == 3.10}},  Deploy is ${{ startsWith(github.ref, 'refs/tags/') && matrix.python-version == 3.10}}"

      # Build a tarball and push to Pypi if tagged with new version
      - name: Build and publish
        if: ${{ startsWith(github.ref, 'refs/tags/') && success() && matrix.python-version == 3.10}}
        run: |
          poetry publish -n --build
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
